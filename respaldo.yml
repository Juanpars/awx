---
- name: Crear y Verificar Backup Local en MikroTik
  hosts: all
  gather_facts: no
  vars:
    backup_format: "export"
    backup_prefix: "respaldo_awx"

  tasks:
    - name: Verificar si es MikroTik
      ansible.builtin.set_fact:
        is_mikrotik: "{{ ansible_network_os is defined and ansible_network_os == 'routeros' }}"
    
    - name: Generar timestamp
      ansible.builtin.set_fact:
        backup_timestamp: "{{ '%Y%m%d%H%M%S' | strftime }}"
      delegate_to: localhost
      run_once: true
      when: is_mikrotik|default(false)

    - name: Generar nombre del archivo
      ansible.builtin.set_fact:
        remote_filename: "{{ backup_prefix }}_{{ inventory_hostname }}_{{ backup_timestamp }}.{{ 'rsc' if backup_format == 'export' else 'backup' }}"
      when: is_mikrotik|default(false)

    - name: Crear backup (export)
      ansible.netcommon.cli_command:
        command: >
          /export file={{ remote_filename.split('.')[0] }}
          show-sensitive
      register: export_result
      when: is_mikrotik|default(false) and backup_format == "export"

    - name: Crear backup (binario)
      ansible.netcommon.cli_command:
        command: >
          /system backup save name={{ remote_filename }}
      register: backup_result
      when: is_mikrotik|default(false) and backup_format == "backup"

    - name: Esperar 5 segundos
      ansible.builtin.pause:
        seconds: 5
      when: is_mikrotik|default(false)

    - name: Verificar archivos en el router
      ansible.netcommon.cli_command:
        command: /file print
      register: all_files
      when: is_mikrotik|default(false)

    - name: Verificar archivos de backup
      ansible.netcommon.cli_command:
        command: /file print where name~"{{ backup_prefix }}"
      register: backup_files
      when: is_mikrotik|default(false)

    - name: Mostrar resultados completos
      ansible.builtin.debug:
        msg: |
          Resultado del comando export/backup:
          {{ export_result.stdout if backup_format == 'export' else backup_result.stdout }}

          Todos los archivos en el router:
          {{ all_files.stdout_lines }}

          Archivos de backup encontrados:
          {{ backup_files.stdout_lines }}
      when: is_mikrotik|default(false)
