---
- name: Respaldar configuración de routers MikroTik
  hosts: all
  gather_facts: no

  vars:
    backup_dir: "./respaldos_mikrotik"
    backup_filename: "backup_config.rsc"

  tasks:
    - name: Crear carpeta local para respaldos
      local_action: file
        path={{ backup_dir }}
        state=directory
        mode=0755

    - name: Generar archivo de respaldo (.rsc) en router (formato explícito)
      ansible.netcommon.cli_command:
        command: "/export file={{ backup_filename }} verbose"
      register: export_result

    - name: Mostrar salida del comando export (depuración)
      debug:
        var: export_result.stdout_lines

    - name: Esperar para asegurar generación del respaldo
      pause:
        seconds: 10

    - name: Verificar existencia del archivo .rsc explícitamente
      ansible.netcommon.cli_command:
        command: "/file print detail"
      register: all_files

    - name: Mostrar listado completo de archivos en router (depuración)
      debug:
        var: all_files.stdout_lines

    - name: Descargar respaldo desde el router
      ansible.builtin.fetch:
        src: "{{ backup_filename }}"
        dest: "{{ backup_dir }}/{{ inventory_hostname }}-{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}.rsc"
        flat: yes

    - name: Eliminar archivo de respaldo del router
      ansible.netcommon.cli_command:
        command: "/file remove {{ backup_filename }}"

    - name: Confirmar respaldo exitoso
      debug:
        msg: "Respaldo del router {{ inventory_hostname }} almacenado correctamente."

