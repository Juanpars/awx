---
- name: Backup MikroTik Router Configuration
  hosts: all
  gather_facts: no
  vars:
    backup_dir: "/home/awx/respaldos_mikrotik"  # Ruta específica en tu servidor AWX
    backup_name: "backup-{{ ansible_date_time.iso8601 }}"  # Incluye fecha y hora

  tasks:
    - name: Crear directorio de backups (si no existe)
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost  # Ejecuta en el servidor AWX, no en el MikroTik

    - name: Generar backup y exportar configuración (MikroTik)
      community.routeros.command:
        commands:
          - /system backup save name={{ backup_name }}.backup
          - /export file={{ backup_name }}
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        host: "{{ ansible_host }}"

    - name: Descargar archivo .backup al servidor AWX
      ansible.builtin.fetch:
        src: "{{ backup_name }}.backup"
        dest: "{{ backup_dir }}/"
        flat: yes
      delegate_to: localhost

    - name: Descargar archivo .rsc al servidor AWX
      ansible.builtin.fetch:
        src: "{{ backup_name }}.rsc"
        dest: "{{ backup_dir }}/"
        flat: yes
      delegate_to: localhost

    - name: Eliminar archivos temporales del router
      community.routeros.command:
        commands:
          - /file remove {{ backup_name }}.backup
          - /file remove {{ backup_name }}.rsc
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        host: "{{ ansible_host }}"
